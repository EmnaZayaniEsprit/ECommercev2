@model ECommerce.Data.Models.product

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>product</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.currency, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.currency)
                @Html.ValidationMessageFor(model => model.currency)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date)
                @Html.ValidationMessageFor(model => model.date)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description)
                @Html.ValidationMessageFor(model => model.description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name)
                @Html.ValidationMessageFor(model => model.name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price)
                @Html.ValidationMessageFor(model => model.price)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity)
                @Html.ValidationMessageFor(model => model.quantity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.taxe, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.taxe)
                @Html.ValidationMessageFor(model => model.taxe)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.category_idCategory, "category_idCategory", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("category_idCategory", String.Empty)
                @Html.ValidationMessageFor(model => model.category_idCategory)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.promotion_idPromotion, "promotion_idPromotion", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("promotion_idPromotion", String.Empty)
                @Html.ValidationMessageFor(model => model.promotion_idPromotion)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.supplier_idUser, "supplier_idUser", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("supplier_idUser", String.Empty)
                @Html.ValidationMessageFor(model => model.supplier_idUser)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
